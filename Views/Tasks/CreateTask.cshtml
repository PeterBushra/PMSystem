@model Jobick.Models.Task
@{
    Layout = "~/Views/Shared/_LayoutJobick.cshtml";
    ViewData["Title"] = Model.Id == 0 ? "إضافة مهمة" : "تعديل مهمة";

    // Safe extraction: handle boxed decimal and nullable
    decimal? projectTotalCost = ViewBag.ProjectTotalCost is decimal d ? d : ViewBag.ProjectTotalCost as decimal?;
    bool hasProjectTotal = ViewBag.HasProjectTotal is bool b && b;
    decimal existingTasksCost = ViewBag.ExistingTasksCost is decimal e ? e : 0m;

    // Sum of weights of all OTHER tasks in the same project (controller should provide this)
    decimal otherTasksWeight = ViewBag.OtherTasksWeight is decimal ew ? ew : 0m;

    // Determine initial visibility for attachment container (percentage value expected)
    var initialShowAttachment = Model.DoneRatio.HasValue && Model.DoneRatio.Value >= 100m;
}

<div class="content-body" dir="rtl" style="text-align:right;">
    <div class="container-fluid">
        <div class="row page-titles">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("ProjectDetails", "Projects", new { id = Model.ProjectId })">تفاصيل المشروع</a></li>
                <li class="breadcrumb-item active"><a href="javascript:void(0)">@ViewData["Title"]</a></li>
            </ol>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">@ViewData["Title"]</h4>
                    </div>
                    <div class="card-body">
                        <form asp-action="@(Model.Id == 0 ? "PostTask" : "EditTask")" method="post" enctype="multipart/form-data" class="needs-validation" novalidate
                              data-project-total="@(hasProjectTotal ? projectTotalCost.Value.ToString(System.Globalization.CultureInfo.InvariantCulture) : "")"
                              data-has-total="@hasProjectTotal.ToString().ToLower()"
                              data-existing-cost="@existingTasksCost"
                              data-other-weight-sum="@otherTasksWeight.ToString(System.Globalization.CultureInfo.InvariantCulture)">
                            <!-- Hidden fields -->
                            <input type="hidden" asp-for="Id" />
                            <input type="hidden" asp-for="ProjectId" />
                            <input type="hidden" asp-for="CreatedDate" />
                            <input type="hidden" asp-for="CreatedBy" />
                            <input type="hidden" asp-for="Project" />
                            <input type="hidden" asp-for="CreatedByNavigation" />
                            <input type="hidden" asp-for="AttachmentData" />
                            <input type="hidden" asp-for="AttachmentContentType" />
                            <input type="hidden" asp-for="AttachmentFileName" />

                            <div class="row">
                                <div class="col-md-6">
                                    <!-- Inputs -->
                                    <div class="mb-3">
                                        <label asp-for="Task1" class="form-label fw-bold">المهمة</label>
                                        <input asp-for="Task1" class="form-control" required maxlength="50" />
                                        <span asp-validation-for="Task1" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="StageName" class="form-label fw-bold">اسم المرحلة</label>
                                        <input asp-for="StageName" class="form-control" required maxlength="50" />
                                        <span asp-validation-for="StageName" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="ImplementorDepartment" class="form-label fw-bold">القسم المنفذ</label>
                                        <input asp-for="ImplementorDepartment" class="form-control" required maxlength="50" />
                                        <span asp-validation-for="ImplementorDepartment" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="DepartmentResponsible" class="form-label fw-bold">القسم المسؤول</label>
                                        <input asp-for="DepartmentResponsible" class="form-control" required maxlength="50" />
                                        <span asp-validation-for="DepartmentResponsible" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="ExpectedStartDate" class="form-label fw-bold">تاريخ البدء المتوقع</label>
                                        <input asp-for="ExpectedStartDate" type="date" class="form-control js-date" required dir="rtl" style="text-align:right;" />
                                        <span asp-validation-for="ExpectedStartDate" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="ExpectedEndDate" class="form-label fw-bold">تاريخ الانتهاء المتوقع</label>
                                        <input asp-for="ExpectedEndDate" type="date" class="form-control js-date" required dir="rtl" style="text-align:right;" />
                                        <span asp-validation-for="ExpectedEndDate" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox" id="showActualEndDate" @(Model.ActualEndDate != DateTime.MinValue ? "checked" : "") />
                                            <label class="form-check-label" for="showActualEndDate">تعيين تاريخ الانتهاء الفعلي</label>
                                        </div>
                                        <div id="actualEndDateContainer" style="display:@(Model.ActualEndDate != DateTime.MinValue ? "block" : "none");">
                                            <label asp-for="ActualEndDate" class="form-label fw-bold">تاريخ الانتهاء الفعلي</label>
                                            <input asp-for="ActualEndDate" type="date" class="form-control js-date" dir="rtl" style="text-align:right;" />
                                            <span asp-validation-for="ActualEndDate" class="text-danger"></span>
                                            <small class="form-text text-muted">اتركه فارغًا إذا لم تكتمل المهمة.</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="Weight" class="form-label fw-bold">الوزن</label>
                                        <input asp-for="Weight" id="weightInput" type="number" step="0.01" class="form-control" min="0" max="100" required />
                                        <span asp-validation-for="Weight" class="text-danger"></span>
                                        <small class="form-text text-muted">ادخل وزن المهمة بحد اقصي 100</small>
                                        <small class="form-text text-muted d-block">
                                            إجمالي أوزان المهام الأخرى: <span id="otherWeightSpan">@otherTasksWeight.ToString("N2")</span>% — المتاح: <span id="remainingWeightSpan">@Math.Max(100m - otherTasksWeight, 0m).ToString("N2")</span>%
                                        </small>
                                        <div id="weightError" class="invalid-feedback d-block"></div>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="DoneRatio" class="form-label fw-bold">نسبة الإنجاز</label>
                                        <input asp-for="DoneRatio" id="doneRatioInput" type="number" step="0.01" class="form-control" min="0" max="100" required />
                                        <span asp-validation-for="DoneRatio" class="text-danger"></span>
                                        <small class="form-text text-muted">أدخل قيمة بين 0 - 100</small>
                                        @if (Model.Id != 0 && (Model.DoneRatio ?? 0) >= 100m)
                                        {
                                            <div class="alert alert-warning py-2 px-3 small mt-2 mb-0" role="alert">
                                                <strong>تحذير !</strong> - سيتم حذف المرفق اذا تم تغيير نسبة الانجاز
                                            </div>
                                        }
                                    </div>

                                    <div class="mb-3" id="attachmentContainer" style="display:@(initialShowAttachment ? "block" : "none");">
                                        <label for="Attachment" class="form-label fw-bold">رفع المرفق (مطلوب عند اكتمال المهمة)</label>
                                        <small class="form-text text-muted d-block mb-2">الامتدادات المدعومة: PDF، JPG، PNG، DOC، DOCX، XLS، XLSX</small>
                                        @if (Model.AttachmentData != null && Model.AttachmentData.Length > 0 && Model.Id != 0)
                                        {
                                            <div class="mb-2">
                                                <span class="text-success">تم إرفاق ملف بالفعل.</span>
                                                <a class="btn btn-link" href="@Url.Action("DownloadAttachment", "Tasks", new { id = Model.Id })">تحميل الملف الحالي</a>
                                            </div>
                                        }
                                        else
                                        {
                                            <input type="file" name="Attachment" id="Attachment" class="form-control" accept=".pdf,.jpg,.jpeg,.png,.doc,.docx,.xls,.xlsx" />
                                            <span class="text-danger" id="attachmentError"></span>
                                        }
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="DefinationOfDone" class="form-label fw-bold">المخرجات (DOD)</label>
                                        <textarea asp-for="DefinationOfDone" class="form-control" required maxlength="2000"></textarea>
                                        <span asp-validation-for="DefinationOfDone" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="ManyDaysToComplete" class="form-label fw-bold">عدد الأيام لإكمال المهمة</label>
                                        <input asp-for="ManyDaysToComplete" type="number" class="form-control" required />
                                        <span asp-validation-for="ManyDaysToComplete" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Cost" class="form-label fw-bold">التكلفة</label>
                                        <input asp-for="Cost" id="costInput" type="number" step="0.01" class="form-control" min="0" required />
                                        <span asp-validation-for="Cost" class="text-danger"></span>
                                        <small class="form-text text-muted d-block">
                                            التكلفة المتبقية قبل هذه المهمة:
                                            <span id="remainingBeforeSpan">@(hasProjectTotal ? Math.Max(projectTotalCost.GetValueOrDefault() - existingTasksCost, 0).ToString("N2") : "غير محدد")</span>
                                        </small>
                                        <div id="costWarning" class="alert alert-warning d-none mt-2 mb-0 py-2 px-3" style="font-size:0.85rem;"></div>
                                    </div>
                                </div>
                            </div>

                            <button type="submit" class="btn btn-primary" id="saveBtn">حفظ</button>
                            <a href="@Url.Action("ProjectDetails", "Projects", new { id = Model.ProjectId })" class="btn btn-secondary">إلغاء</a>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Jobick_script {
    <script src="~/Jobick/vendor/global/global.min.js"></script>
    <script src="~/Jobick/vendor/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/Jobick/vendor/bootstrap-datepicker-master/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Jobick/js/custom.min.js"></script>
    <script src="~/Jobick/js/dlabnav-init.js"></script>

    <script>
        (function () {
            'use strict';

            const form = document.querySelector('form.needs-validation');
            if (!form) return;

            // ---- Weight validation (Total must not exceed 100%) ----
            const weightInput = document.getElementById('weightInput');
            const weightError = document.getElementById('weightError');
            const remainingWeightSpan = document.getElementById('remainingWeightSpan');
            const saveBtn = document.getElementById('saveBtn');

            const otherWeight = parseFloat(form.getAttribute('data-other-weight-sum')) || 0; // sum of other tasks' weights
            const limit = 100;

            function formatPct(n) {
                try { return n.toLocaleString('ar-EG', { minimumFractionDigits: 2, maximumFractionDigits: 2 }); }
                catch { return (Math.round(n * 100) / 100).toString(); }
            }

            function updateWeightValidation() {
                if (!weightInput) return;

                const entered = parseFloat(weightInput.value);
                const weight = isNaN(entered) ? 0 : entered;
                const total = otherWeight + weight;
                const remainingBefore = Math.max(limit - otherWeight, 0);

                if (remainingWeightSpan) remainingWeightSpan.textContent = formatPct(remainingBefore);

                if (total > limit) {
                    const exceededBy = total - limit;
                    weightInput.classList.add('is-invalid');
                    weightInput.setCustomValidity('إجمالي الأوزان يتجاوز 100%');
                    if (weightError) {
                        weightError.textContent = 'خطأ: مجموع الأوزان (' + formatPct(total) + '%) يتجاوز الحد الأقصى 100%. مقدار التجاوز: ' + formatPct(exceededBy) + '%.\u200f';
                    }
                    if (saveBtn) saveBtn.disabled = true;
                } else {
                    weightInput.classList.remove('is-invalid');
                    weightInput.setCustomValidity('');
                    if (weightError) weightError.textContent = '';
                    if (saveBtn) saveBtn.disabled = false;
                }
            }

            if (weightInput) {
                weightInput.addEventListener('input', updateWeightValidation);
                updateWeightValidation();
            }

            // ---- Cost Warning Logic ----
            const hasTotal = form.getAttribute('data-has-total') === 'true';
            const projectTotal = hasTotal ? (parseFloat(form.getAttribute('data-project-total')) || 0) : NaN;
            const existingCost = parseFloat(form.getAttribute('data-existing-cost')) || 0;
            const costInput = document.getElementById('costInput');
            const warningDiv = document.getElementById('costWarning');
            const remainingBeforeSpan2 = document.getElementById('remainingBeforeSpan');

            function formatNumber(n) { return n.toLocaleString('ar-EG', { minimumFractionDigits: 0, maximumFractionDigits: 0 }); }
            function showInfo(msg) { warningDiv.classList.remove('d-none', 'alert-warning'); warningDiv.classList.add('alert-info'); warningDiv.textContent = msg; }
            function showWarn(html) { warningDiv.classList.remove('d-none', 'alert-info'); warningDiv.classList.add('alert-warning'); warningDiv.innerHTML = html; }
            function hideWarning() { warningDiv.classList.add('d-none'); warningDiv.classList.remove('alert-warning', 'alert-info'); warningDiv.textContent = ''; }

            function updateCostWarning() {
                if (!costInput || !warningDiv) return;
                const entered = parseFloat(costInput.value) || 0;
                if (!hasTotal) { showInfo('لم يتم تحديد التكلفة الإجمالية للمشروع. لن يتم التحقق من تجاوز الميزانية. يُفضل تحديدها من تفاصيل المشروع أولاً.'); if (remainingBeforeSpan2) remainingBeforeSpan2.textContent = 'غير محدد'; return; }
                const newTotal = existingCost + entered;
                const remaining = Math.max(projectTotal - existingCost, 0);
                if (remainingBeforeSpan2) remainingBeforeSpan2.textContent = formatNumber(remaining);
                if (newTotal > projectTotal) { const exceededBy = newTotal - projectTotal; showWarn('تنبيه: مجموع تكاليف المهام بعد إضافة هذه المهمة (' + formatNumber(newTotal) + ') سيتجاوز تكلفة المشروع (' + formatNumber(projectTotal) + '). مقدار التجاوز: ' + formatNumber(exceededBy) + '.'); } else { hideWarning(); }
            }

            if (costInput) { costInput.addEventListener('input', updateCostWarning); updateCostWarning(); }

            // ---- Attachment toggle on done ratio ----
            const doneRatioInput = document.getElementById('doneRatioInput');
            const attachmentContainer = document.getElementById('attachmentContainer');
            if (doneRatioInput && attachmentContainer) {
                function toggleAttachment() {
                    const ratio = parseFloat(doneRatioInput.value) || 0;
                    attachmentContainer.style.display = (ratio >= 100) ? 'block' : 'none';
                    if (ratio < 100) {
                        const att = document.getElementById('Attachment');
                        if (att) att.value = '';
                        const err = document.getElementById('attachmentError');
                        if (err) err.textContent = '';
                    }
                }
                doneRatioInput.addEventListener('input', toggleAttachment);
                doneRatioInput.addEventListener('change', toggleAttachment);
                toggleAttachment();
            }

            // ---- Show / hide actual end date ----
            const checkbox = document.getElementById('showActualEndDate');
            const container = document.getElementById('actualEndDateContainer');
            if (checkbox && container) {
                checkbox.addEventListener('change', function () {
                    container.style.display = this.checked ? 'block' : 'none';
                    if (!this.checked) {
                        const input = container.querySelector('input[type="text"]');
                        if (input) input.value = "";
                    }
                });
            }
        })();
    </script>
}
