@model Jobick.ViewModels.ProjectStatisticsVM
@using System.Text.Json
@{
    Layout = "~/Views/Shared/_LayoutJobick.cshtml";
    ViewData["Title"] = "بيانات المشاريع";

    var total = Model.InProgressProjects + Model.NotStartedProjects + Model.DoneProjects;

    // First KPI (counts by year already present)
    var orderedYears = Model.ProjectsCountByYear.OrderBy(x => x.Key).ToList();
    var yearsJson  = JsonSerializer.Serialize(orderedYears.Select(x => x.Key));
    var countsJson = JsonSerializer.Serialize(orderedYears.Select(x => x.Value));

    // NEW: Budgets per year (Fourth KPI) - based on EndDate.Year
    var orderedBudgetYears = Model.ProjectsBudgetsByYear.OrderBy(x => x.Key).ToList();
    var budgetYearsJson = JsonSerializer.Serialize(orderedBudgetYears.Select(x => x.Key));
    var budgetYearValuesJson = JsonSerializer.Serialize(orderedBudgetYears.Select(x => x.Value));

    // Third KPI – ordered budgets & real names
    var orderedBudgets = Model.AllProjectsBudgetsExceptFullyDone
        .OrderByDescending(x => x.Value)
        .ToList();

    // Safely map Id -> Name (fallback to "مشروع {id}")
    var budgetLabelsJson = JsonSerializer.Serialize(
        orderedBudgets.Select(x =>
            Model.ProjectNames.TryGetValue(x.Key, out var name) && !string.IsNullOrWhiteSpace(name)
                ? name
                : $"مشروع {x.Key}"
        ));

    var budgetValuesJson = JsonSerializer.Serialize(orderedBudgets.Select(x => x.Value));
    var totalBudget = orderedBudgets.Sum(b => b.Value);
}
<div class="content-body">
    <div class="container-fluid">
        <!-- First Row -->
        <div class="row">
            <!-- Project Status -->
            <div class="col-xl-6">
                <div class="card mt-4">
                    <div class="card-header border-0 pb-0 d-flex align-items-center">
                        <h4 class="card-title mb-0">حالة المشاريع</h4>
                        <span class="badge bg-info ms-2" style="font-size:0.7rem;">يتم احتساب حالة المشاريع فقط للمشاريع التي تحتوي على مهام</span>
                    </div>
                    <div class="card-body pt-3">
                        <div class="row align-items-center">
                            <div class="col-xl-6 col-sm-6">
                                @{
                                    int pct(int v) => total > 0 ? (int)Math.Round(v * 100.0 / total) : 0;
                                }
                                <div class="progress default-progress mb-3">
                                    <div class="progress-bar bg-success progress-animated" style="width:@pct(Model.DoneProjects)%"></div>
                                </div>
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="font-w500">المشاريع المكتملة</span>
                                    <span>@Model.DoneProjects (@pct(Model.DoneProjects)%)</span>
                                </div>
                                <div class="progress default-progress mb-3">
                                    <div class="progress-bar bg-info progress-animated" style="width:@pct(Model.InProgressProjects)%"></div>
                                </div>
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="font-w500">جاري التنفيذ</span>
                                    <span>@Model.InProgressProjects (@pct(Model.InProgressProjects)%)</span>
                                </div>
                                <div class="progress default-progress mb-3">
                                    <div class="progress-bar bg-warning progress-animated" style="width:@pct(Model.NotStartedProjects)%"></div>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span class="font-w500">لم تبدأ</span>
                                    <span>@Model.NotStartedProjects (@pct(Model.NotStartedProjects)%)</span>
                                </div>
                            </div>
                            <div class="col-xl-6 col-sm-6">
                                <div id="projectsStatusPie"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Projects Count By Year -->
            <div class="col-xl-6">
                <div class="card mt-4">
                    <div class="card-header border-0 pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">عدد المشاريع حسب السنة</h4>
                        @if(!orderedYears.Any())
                        {
                            <span class="badge bg-warning text-dark">لا بيانات</span>
                        }
                    </div>
                    <div class="card-body pt-3">
                        <div id="projectsByYearBar" style="min-height:280px;"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- NEW ROW: Budgets per Year (Vertical Bars) + Donut (Third KPI) -->
        <div class="row mt-4">
            <!-- Budgets per Year (Vertical Bars) -->
            <div class="col-xl-6">
                <div class="card">
                    <div class="card-header border-0 pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">ميزانيات المشاريع حسب السنة</h4>
                        @if(!orderedBudgetYears.Any())
                        {
                            <span class="badge bg-warning text-dark">لا بيانات</span>
                        }
                    </div>
                    <div class="card-body pt-3">
                        <div id="projectsBudgetByYearBar" style="min-height:280px;"></div>
                    </div>
                </div>
            </div>

            <!-- Third KPI Budgets (Donut) moved here (was a separate full-width row) -->
            <div class="col-xl-6">
                <div class="card h-100">
                    <div class="card-header border-0 pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">ميزانيات المشاريع (غير المكتملة بالكامل)</h4>
                        <span class="small text-muted">
                            الإجمالي: @totalBudget.ToString("N2")
                        </span>
                    </div>
                    <div class="card-body pt-3">
                        @if (!orderedBudgets.Any())
                        {
                            <div class="alert alert-info text-center mb-0">لا توجد بيانات ميزانيات للعرض.</div>
                        }
                        else
                        {
                            <div id="projectsBudgetsDonut" style="min-height:280px;"></div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Overdue Projects Table -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header border-0 pb-0">
                        <h4 class="card-title mb-0">المشاريع المتأخرة</h4>
                    </div>
                    <div class="card-body pt-3">
                        <div class="table-responsive">
                            <table id="overdueProjectsTable" class="table table-hover table-striped" style="min-width:900px">
                                <thead>
                                    <tr>
                                        <th class="text-center">معرف المشروع</th>
                                        <th class="text-center">اسم المشروع</th>
                                        <th class="text-center">تاريخ الانتهاء</th>
                                        <th class="text-center">عدد المهام غير المكتملة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @foreach (var p in Model.OverdueProjectsWithIncompleteTasks)
                                {
                                    <tr class="project-row" data-project-id="@p.ProjectId" style="cursor:pointer;">
                                        <td class="text-center">@p.ProjectId</td>
                                        <td class="text-center">@p.Name</td>
                                        <td class="text-center">@p.EndDate.ToShortDateString()</td>
                                        <td class="text-center">@p.IncompleteTasksCount</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                            @if(!Model.OverdueProjectsWithIncompleteTasks.Any())
                            {
                                <div class="alert alert-info text-center mb-0 mt-3">لا توجد مشاريع متأخرة.</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@section Jobick_style{
    <link href="~/Jobick/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Jobick/vendor/datatables/responsive/responsive.css" rel="stylesheet" />
}

@section Jobick_script{
    <script src="~/Jobick/vendor/global/global.min.js"></script>
    <script src="~/Jobick/js/custom.min.js"></script>
    <script src="~/Jobick/js/dlabnav-init.js"></script>
    <script src="~/Jobick/vendor/peity/jquery.peity.min.js"></script>
    <script src="~/Jobick/vendor/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/Jobick/vendor/bootstrap-datepicker-master/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Jobick/vendor/apexchart/apexchart.js"></script>
    <script src="~/Jobick/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Jobick/vendor/datatables/responsive/responsive.js"></script>
    <script src="~/Jobick/vendor/owl-carousel/owl.carousel.js"></script>
    <script>
        (function(){

            const years  = @Html.Raw(yearsJson);
            const counts = @Html.Raw(countsJson);

            // Budgets per year
            const budgetYears = @Html.Raw(budgetYearsJson);
            const budgetYearValues = @Html.Raw(budgetYearValuesJson);

            // Donut budgets (projects not fully done)
            const budgetLabels = @Html.Raw(@budgetLabelsJson);
            const budgetValues = @Html.Raw(@budgetValuesJson);
            const totalBudget = @(@totalBudget.ToString(System.Globalization.CultureInfo.InvariantCulture));

            // Status Pie
            const statusEl = document.querySelector("#projectsStatusPie");
            const done = @Model.DoneProjects;
            const inProgress = @Model.InProgressProjects;
            const notStarted = @Model.NotStartedProjects;
            if(statusEl){
                if(done + inProgress + notStarted > 0){
                    new ApexCharts(statusEl,{
                        chart:{ type:'pie', height:250, fontFamily:'inherit' },
                        series:[done, inProgress, notStarted],
                        labels:['مكتملة','جاري التنفيذ','لم تبدأ'],
                        colors:['#198754','#0dcaf0','#ffc107'],
                        legend:{ position:'bottom' },
                        dataLabels:{
                            enabled:true,
                            formatter:(val,opts)=> opts.w.globals.series[opts.seriesIndex]
                        },
                        tooltip:{ y:{ formatter:v=> v + ' مشروع'} }
                    }).render();
                }else{
                    statusEl.innerHTML = '<div class="alert alert-info text-center mb-0">لا توجد بيانات حالة المشاريع للعرض.</div>';
                }
            }

            // Projects Count By Year
            const barEl = document.querySelector("#projectsByYearBar");
            if(barEl){
                const realYears = years.length ? years : ['لا بيانات'];
                const realCounts = years.length ? counts : [0];
                new ApexCharts(barEl,{
                    chart:{ type:'bar', height:280, toolbar:{ show:false }, fontFamily:'inherit' },
                    series:[{ name:'عدد المشاريع', data: realCounts }],
                    xaxis:{
                        categories: realYears,
                        axisBorder:{ show:false },
                        axisTicks:{ show:false },
                        labels:{ style:{ colors:'#6c757d', fontSize:'13px' } }
                    },
                    yaxis:{ labels:{ style:{ colors:'#6c757d', fontSize:'12px' } } },
                    plotOptions:{ bar:{ columnWidth:'40%', endingShape:'rounded', borderRadius:4 } },
                    dataLabels:{ enabled:true, formatter:(val)=> val, style:{ fontSize:'12px', fontWeight:'600' } },
                    stroke:{ show:true, width:2, colors:['transparent'] },
                    colors:['#35c556'],
                    fill:{ type:'gradient', gradient:{ shade:'light', type:'vertical', opacityFrom:.95, opacityTo:.4, stops:[0,90,100] } },
                    grid:{ strokeDashArray:6, borderColor:'var(--border, #e5e5e5)' },
                    tooltip:{ y:{ formatter:v=> v + ' مشروع'} },
                    noData:{ text:'لا توجد بيانات', align:'center', verticalAlign:'middle' }
                }).render();
            }

            // Budgets per Year Bar
            const budgetYearEl = document.querySelector("#projectsBudgetByYearBar");
            if(budgetYearEl){
                const realBudgetYears = budgetYears.length ? budgetYears : ['لا بيانات'];
                const realBudgetValues = budgetYears.length ? budgetYearValues : [0];
                new ApexCharts(budgetYearEl,{
                    chart:{ type:'bar', height:280, toolbar:{ show:false }, fontFamily:'inherit' },
                    series:[{ name:'الميزانية', data: realBudgetValues }],
                    xaxis:{
                        categories: realBudgetYears,
                        axisBorder:{ show:false },
                        axisTicks:{ show:false },
                        labels:{ style:{ colors:'#6c757d', fontSize:'13px' } }
                    },
                    yaxis:{
                        labels:{
                            style:{ colors:'#6c757d', fontSize:'12px' },
                            formatter:(v)=> Intl.NumberFormat('ar-EG',{notation:'compact',maximumFractionDigits:1}).format(v)
                        }
                    },
                    plotOptions:{ bar:{ columnWidth:'40%', endingShape:'rounded', borderRadius:4 } },
                    dataLabels:{
                        enabled:true,
                        formatter:(val)=> Intl.NumberFormat('ar-EG',{notation:'compact',maximumFractionDigits:1}).format(val),
                        style:{ fontSize:'12px', fontWeight:'600' }
                    },
                    stroke:{ show:true, width:2, colors:['transparent'] },
                    colors:['#0d6efd'],
                    fill:{ type:'gradient', gradient:{ shade:'light', type:'vertical', opacityFrom:.95, opacityTo:.4, stops:[0,90,100] } },
                    grid:{ strokeDashArray:6, borderColor:'var(--border, #e5e5e5)' },
                    tooltip:{ y:{ formatter:v=> Intl.NumberFormat('ar-EG',{minimumFractionDigits:2,maximumFractionDigits:2}).format(v) } },
                    noData:{ text:'لا توجد بيانات', align:'center', verticalAlign:'middle' }
                }).render();
            }

            // Budgets Donut
            const budgetEl = document.querySelector("#projectsBudgetsDonut");
            if(budgetEl && budgetValues.length){
                new ApexCharts(budgetEl,{
                    chart:{ type:'donut', height:340, fontFamily:'inherit' },
                    series: budgetValues,
                    labels: budgetLabels,
                    colors: ['#4e79a7','#f28e2b','#e15759','#76b7b2','#59a14f','#edc949','#af7aa1','#ff9da7','#9c755f','#bab0ab'],
                    legend:{ position:'right', fontSize:'12px', markers:{ width:10, height:10 }, itemMargin:{ vertical:4 } },
                    dataLabels:{
                        enabled:true,
                        formatter:(val,opts)=>{
                            const v = opts.w.globals.series[opts.seriesIndex];
                            return v ? Intl.NumberFormat('ar-EG',{notation:'compact',maximumFractionDigits:1}).format(v) : '';
                        }
                    },
                    tooltip:{ y:{ formatter:(v)=> Intl.NumberFormat('ar-EG',{minimumFractionDigits:2, maximumFractionDigits:2}).format(v) } },
                    plotOptions:{
                        pie:{ donut:{ size:'70%', labels:{ show:true,
                            name:{ show:true, offsetY:10 },
                            value:{ show:true, fontSize:'14px',
                                formatter:(v)=> Intl.NumberFormat('ar-EG',{minimumFractionDigits:2, maximumFractionDigits:2}).format(parseFloat(v||0)) },
                            total:{ show:true, label:'الإجمالي', fontSize:'14px',
                                formatter:()=> Intl.NumberFormat('ar-EG',{minimumFractionDigits:2, maximumFractionDigits:2}).format(totalBudget) }
                        } } }
                    }
                }).render();
            }

            // Overdue Table
            $('#overdueProjectsTable').DataTable({
                paging:false,
                searching:false,
                info:false,
                responsive:true,
                language:{ url:'//cdn.datatables.net/plug-ins/1.10.21/i18n/Arabic.json' }
            });

            $(document).on('click','#overdueProjectsTable .project-row',function(){
                const id = $(this).data('project-id');
                if(id) window.location.href = '/Projects/ProjectDetails/' + id;
            });

        })();
    </script>
}