@model Jobick.ViewModels.ProjectStatisticsVM
@using System.Text.Json
@{
    Layout = "~/Views/Shared/_LayoutJobick.cshtml";
    ViewData["Title"] = "بيانات المشاريع";

    var total = Model.InProgressProjects + Model.NotStartedProjects + Model.DoneProjects;
    var orderedYears = Model.ProjectsCountByYear.OrderBy(x => x.Key).ToList();
    var yearsJson  = JsonSerializer.Serialize(orderedYears.Select(x => x.Key));   // [2023,2024]
    var countsJson = JsonSerializer.Serialize(orderedYears.Select(x => x.Value)); // [5,7]
}
<div class="content-body">
    <div class="container-fluid">
        <!-- First Row -->
        <div class="row">
            <!-- Project Status (Pie like ProjectDetails style) -->
            <div class="col-xl-6">
                <div class="card mt-4">
                    <div class="card-header border-0 pb-0">
                        <h4 class="card-title mb-0">حالة المشاريع</h4>
                    </div>
                    <div class="card-body pt-3">
                        <div class="row align-items-center">
                            <div class="col-xl-6 col-sm-6">
                                @{
                                    int pct(int v) => total > 0 ? (int)Math.Round(v * 100.0 / total) : 0;
                                }
                                <div class="progress default-progress mb-3">
                                    <div class="progress-bar bg-success progress-animated" style="width:@pct(Model.DoneProjects)%"></div>
                                </div>
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="font-w500">المشاريع المكتملة</span>
                                    <span>@Model.DoneProjects (@pct(Model.DoneProjects)%)</span>
                                </div>

                                <div class="progress default-progress mb-3">
                                    <div class="progress-bar bg-info progress-animated" style="width:@pct(Model.InProgressProjects)%"></div>
                                </div>
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="font-w500">جاري التنفيذ</span>
                                    <span>@Model.InProgressProjects (@pct(Model.InProgressProjects)%)</span>
                                </div>

                                <div class="progress default-progress mb-3">
                                    <div class="progress-bar bg-warning progress-animated" style="width:@pct(Model.NotStartedProjects)%"></div>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span class="font-w500">لم تبدأ</span>
                                    <span>@Model.NotStartedProjects (@pct(Model.NotStartedProjects)%)</span>
                                </div>
                            </div>
                            <div class="col-xl-6 col-sm-6">
                                <div id="projectsStatusPie"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Second KPI Vertical Bars -->
            <div class="col-xl-6">
                <div class="card mt-4">
                    <div class="card-header border-0 pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">عدد المشاريع حسب السنة</h4>
                        @if(!orderedYears.Any())
                        {
                            <span class="badge bg-warning text-dark">لا بيانات</span>
                        }
                    </div>
                    <div class="card-body pt-3">
                        <div id="projectsByYearBar" style="min-height:280px;"></div>
                        @* Debug (remove if not needed):
                        <div class="small text-muted mt-2">
                            @string.Join(" | ", orderedYears.Select(x => $"{x.Key}:{x.Value}"))
                        </div>*@
                    </div>
                </div>
            </div>
        </div>

        <!-- Overdue Projects Table -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header border-0 pb-0">
                        <h4 class="card-title mb-0">المشاريع المتأخرة</h4>
                    </div>
                    <div class="card-body pt-3">
                        <div class="table-responsive">
                            <table id="overdueProjectsTable" class="table table-hover table-striped" style="min-width:900px">
                                <thead>
                                    <tr>
                                        <th class="text-center">معرف المشروع</th>
                                        <th class="text-center">اسم المشروع</th>
                                        <th class="text-center">تاريخ الانتهاء</th>
                                        <th class="text-center">عدد المهام غير المكتملة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @foreach (var p in Model.OverdueProjectsWithIncompleteTasks)
                                {
                                    <tr class="project-row" data-project-id="@p.ProjectId" style="cursor:pointer;">
                                        <td class="text-center">@p.ProjectId</td>
                                        <td class="text-center">@p.Name</td>
                                        <td class="text-center">@p.EndDate.ToShortDateString()</td>
                                        <td class="text-center">@p.IncompleteTasksCount</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                            @if(!Model.OverdueProjectsWithIncompleteTasks.Any())
                            {
                                <div class="alert alert-info text-center mb-0 mt-3">لا توجد مشاريع متأخرة.</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@section Jobick_style{
    <link href="~/Jobick/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Jobick/vendor/datatables/responsive/responsive.css" rel="stylesheet" />
}

@section Jobick_script{
    <!-- Core & Vendor (single includes, remove duplicates) -->
    <script src="~/Jobick/vendor/global/global.min.js"></script>
    <script src="~/Jobick/vendor/apexchart/apexchart.js"></script>
    <script src="~/Jobick/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Jobick/vendor/datatables/responsive/responsive.js"></script>
    <script src="~/Jobick/js/custom.min.js"></script>
    <script src="~/Jobick/js/dlabnav-init.js"></script>

    <script>
        (function(){

            const years  = @Html.Raw(yearsJson);   // e.g. [2023,2024]
            const counts = @Html.Raw(countsJson);  // e.g. [5,7]

            // 1. Status Pie (mirrors style used in ProjectDetails)
            const statusEl = document.querySelector("#projectsStatusPie");
            if(statusEl){
                new ApexCharts(statusEl,{
                    chart:{ type:'pie', height:250, fontFamily:'inherit' },
                    series:[@Model.DoneProjects, @Model.InProgressProjects, @Model.NotStartedProjects],
                    labels:['مكتملة','جاري التنفيذ','لم تبدأ'],
                    colors:['#198754','#0dcaf0','#ffc107'],
                    legend:{ position:'bottom' },
                    dataLabels:{
                        enabled:true,
                        formatter:(val,opts)=> opts.w.globals.series[opts.seriesIndex]
                    },
                    tooltip:{ y:{ formatter:v=> v + ' مشروع'} }
                }).render();
            }

            // 2. Vertical Bars for KPI2
            const barEl = document.querySelector("#projectsByYearBar");
            if(barEl){
                const realYears = years.length ? years : ['لا بيانات'];
                const realCounts = years.length ? counts : [0];

                new ApexCharts(barEl,{
                    chart:{
                        type:'bar',
                        height:280,
                        toolbar:{ show:false },
                        fontFamily:'inherit'
                    },
                    series:[{ name:'عدد المشاريع', data: realCounts }],
                    xaxis:{
                        categories: realYears,
                        axisBorder:{ show:false },
                        axisTicks:{ show:false },
                        labels:{ style:{ colors:'#6c757d', fontSize:'13px' } }
                    },
                    yaxis:{
                        labels:{ style:{ colors:'#6c757d', fontSize:'12px' } }
                    },
                    plotOptions:{
                        bar:{
                            columnWidth:'40%',
                            endingShape:'rounded',
                            borderRadius:4
                        }
                    },
                    dataLabels:{
                        enabled:true,
                        formatter:(val)=> val,
                        style:{ fontSize:'12px', fontWeight:'600' }
                    },
                    stroke:{ show:true, width:2, colors:['transparent'] },
                    colors:['#35c556'],
                    fill:{
                        type:'gradient',
                        gradient:{
                            shade:'light',
                            type:'vertical',
                            opacityFrom:.95,
                            opacityTo:.4,
                            stops:[0,90,100]
                        }
                    },
                    grid:{
                        strokeDashArray:6,
                        borderColor:'var(--border, #e5e5e5)'
                    },
                    tooltip:{ y:{ formatter:v=> v + ' مشروع'} },
                    noData:{ text:'لا توجد بيانات', align:'center', verticalAlign:'middle' }
                }).render();
            }

            // 3. Overdue projects table (simple / no paging)
            $('#overdueProjectsTable').DataTable({
                paging:false,
                searching:false,
                info:false,
                responsive:true,
                language:{ url:'//cdn.datatables.net/plug-ins/1.10.21/i18n/Arabic.json' }
            });

            // Row click -> redirect
            $(document).on('click','#overdueProjectsTable .project-row',function(){
                const id = $(this).data('project-id');
                if(id) window.location.href = '/Projects/ProjectDetails/' + id;
            });

        })();
    </script>
}