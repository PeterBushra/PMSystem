@model Jobick.ViewModels.ProjectStatisticsVM
@using System.Text.Json
@using System.Globalization
@{
    Layout = "~/Views/Shared/_LayoutJobick.cshtml";
    ViewData["Title"] = "بيانات المشاريع";

    var total = Model.InProgressProjects + Model.NotStartedProjects + Model.DoneProjects;

    // First KPI (counts by year already present)
    var orderedYears = Model.ProjectsCountByYear.OrderBy(x => x.Key).ToList();
    var yearsJson  = JsonSerializer.Serialize(orderedYears.Select(x => x.Key));
    var countsJson = JsonSerializer.Serialize(orderedYears.Select(x => x.Value));

    // NEW: Budgets per year (Fourth KPI) - based on EndDate.Year
    var orderedBudgetYears = Model.ProjectsBudgetsByYear.OrderBy(x => x.Key).ToList();
    var budgetYearsJson = JsonSerializer.Serialize(orderedBudgetYears.Select(x => x.Key));
    var budgetYearValuesJson = JsonSerializer.Serialize(orderedBudgetYears.Select(x => x.Value));

    // Third KPI – ordered budgets & real names
    var orderedBudgets = Model.AllProjectsBudgetsExceptFullyDone
        .OrderByDescending(x => x.Value)
        .ToList();

    // Safely map Id -> Name (fallback to "مشروع {id}")
    var budgetLabelsJson = JsonSerializer.Serialize(
        orderedBudgets.Select(x =>
            Model.ProjectNames.TryGetValue(x.Key, out var name) && !string.IsNullOrWhiteSpace(name)
                ? name
                : $"مشروع {x.Key}"
        ));

    var budgetValuesJson = JsonSerializer.Serialize(orderedBudgets.Select(x => x.Value));
    var totalBudget = orderedBudgets.Sum(b => b.Value);

    // Arabic compact display (no decimals): ألف / مليون / مليار / تريليون, with Arabic number formatting.
    var ar = new CultureInfo("ar-EG");
    var totalBudgetCompact = totalBudget.ToString("N0", ar);
    var totalBudgetExact   = totalBudget.ToString("N2", ar);

    // Added: Responsible filter data from ViewBag
    var responsibleList = ViewBag.ResponsibleList as List<string> ?? new List<string>();
    string? selectedResponsible = ViewBag.SelectedResponsible as string;
    bool hasResponsibleOptions = (ViewBag.HasResponsibleOptions as bool?) ?? false;
}
<div class="content-body">
    <div class="container-fluid">
        <!-- Added: Filter toolbar for ResponsibleForImplementing -->
        <div class="row g-3 align-items-center mt-2">
            <div class="col-12">
                <div class="card card-modern">
                    <div class="card-body d-flex flex-nowrap align-items-center gap-2">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-filter me-2 text-primary"></i>
                            <strong class="me-2">تصفية حسب القطاع المسؤول</strong>
                        </div>
                        <div class="modern-select w-auto ms-2" style="min-width:260px;">
                            @if (hasResponsibleOptions && responsibleList.Any())
                            {
                                <select id="responsibleFilter"
                                        class="selectpicker show-tick"
                                        data-style="btn-light rounded-pill shadow-sm border"
                                        data-live-search="true"
                                        data-container="body"
                                        data-dropup-auto="false"
                                        data-size="7"
                                        data-width="auto"
                                        title="اختر القطاع المسؤول">
                                    @foreach (var resp in responsibleList)
                                    {
                                        if (string.Equals(resp, selectedResponsible, StringComparison.Ordinal))
                                        {
                                            <option value="@resp" selected>@resp</option>
                                        }
                                        else
                                        {
                                            <option value="@resp">@resp</option>
                                        }
                                    }
                                </select>
                            }
                            else
                            {
                                <div class="alert alert-warning mb-0 empty-message">
                                    لا توجد جهات مسؤولة متاحة.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Modern KPI row -->
        <div class="row kpi-row g-3 mt-2">
            <div class="col-12 col-md-6 col-xl-3">
                <div class="card kpi-card kpi-bg-success">
                    <div class="card-body">
                        <div class="kpi-top">
                            <div class="kpi-label">المشاريع المكتملة</div>
                            <i class="kpi-icon fas fa-check-circle"></i>
                        </div>
                        <div class="kpi-value" data-countup>@Model.DoneProjects</div>
                        <div class="kpi-sub">نسبة: @((total>0? (Model.DoneProjects*100/total):0))%</div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-xl-3">
                <!-- In-progress uses #e16b16 -->
                <div class="card kpi-card kpi-inprogress">
                    <div class="card-body">
                        <div class="kpi-top">
                            <div class="kpi-label">جاري التنفيذ</div>
                            <i class="kpi-icon fas fa-tasks"></i>
                        </div>
                        <div class="kpi-value" data-countup>@Model.InProgressProjects</div>
                        <div class="kpi-sub">نسبة: @((total>0? (Model.InProgressProjects*100/total):0))%</div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-xl-3">
                <!-- Not started uses #b5b5b5 -->
                <div class="card kpi-card kpi-notstarted">
                    <div class="card-body">
                        <div class="kpi-top">
                            <div class="kpi-label">لم تبدأ</div>
                            <i class="kpi-icon fas fa-hourglass-start"></i>
                        </div>
                        <div class="kpi-value" data-countup>@Model.NotStartedProjects</div>
                        <div class="kpi-sub">نسبة: @((total>0? (Model.NotStartedProjects*100/total):0))%</div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-xl-3">
                <div class="card kpi-card kpi-bg-primary">
                    <div class="card-body">
                        <div class="kpi-top">
                            <div class="kpi-label">الميزانية الإجمالية</div>
                            <i class="kpi-icon fas fa-coins"></i>
                        </div>
                        <!-- Compact Arabic text; tooltip shows exact Arabic-formatted amount -->
                        <div class="kpi-value"
                             id="totalBudgetDisplay"
                             title="@totalBudgetExact">
                            @totalBudgetCompact
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- First Row -->
        <div class="row mt-3">
            <!-- Project Status -->
            <div class="col-xl-6">
                <div class="card card-modern mt-4">
                    <div class="card-header border-0 pb-0 d-flex align-items-center">
                        <h4 class="card-title mb-0">حالة المشاريع</h4>
                        <span class="badge bg-light text-muted border ms-2" style="font-size:0.7rem;">يتم احتساب حالة المشاريع فقط للمشاريع التي تحتوي على مهام</span>

                    </div>
                    <div class="card-body pt-3">
                        @if (total == 0)
                        {
                            <div class="alert alert-info text-center mb-0">لا توجد بيانات لعرضها.</div>
                        }
                        else
                        {
                            <div id="projectsStatusPie"></div>
                        }
                    </div>
                </div>
            </div>
            <!-- Projects Count By Year -->
            <div class="col-xl-6">
                <div class="card card-modern mt-4">
                    <div class="card-header border-0 pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">عدد المشاريع حسب السنة</h4>
                        @if(!orderedYears.Any())
                        {
                            <span class="badge bg-warning text-dark">لا بيانات</span>
                        }
                    </div>
                    <div class="card-body pt-3">
                        @if (!orderedYears.Any())
                        {
                            <div class="alert alert-info text-center mb-0 empty-message ">لا توجد بيانات لعرضها.</div>
                        }
                        else
                        {
                            <div id="projectsByYearBar"></div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- NEW ROW: Budgets per Year (Vertical Bars) + Donut (Third KPI) -->
        <div class="row mt-4">
            <div class="col-xl-6">
                <div class="card card-modern">
                    <div class="card-header border-0 pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">ميزانيات المشاريع حسب السنة</h4>
                        @if(!orderedBudgetYears.Any())
                        {
                            <span class="badge bg-warning text-dark">لا بيانات</span>
                        }
                    </div>
                    <div class="card-body pt-3">
                        @if (!orderedBudgetYears.Any())
                        {
                            <div class="alert alert-info text-center mb-0 empty-message ">لا توجد بيانات لعرضها.</div>
                        }
                        else
                        {
                            <div id="projectsBudgetByYearBar"></div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-xl-6">
                <div class="card card-modern h-100">
                    <div class="card-header border-0 pb-0 d-flex justify-content_between justify-content-between align-items-center">
                        <h4 class="card-title mb-0">ميزانيات المشاريع (غير المكتملة بالكامل)</h4>
                        <span class="small text-muted">
                            الإجمالي: @totalBudget.ToString("N0")
                        </span>
                    </div>
                    <div class="card-body pt-3">
                        @if (!orderedBudgets.Any())
                        {
                            <div class="alert alert-info text-center mb-0">لا توجد بيانات ميزانيات للعرض.</div>
                        }
                        else
                        {
                            <div id="projectsBudgetsDonut"></div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Overdue + At-Risk Projects Table -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card card-modern">
                    <div class="card-header border-0 pb-0">
                        <h4 class="card-title mb-0">المشاريع المتأخرة أو المعرضة للخطر</h4>
                    </div>
                    <div class="card-body pt-3">

                        @if (!Model.OverdueProjectsWithIncompleteTasks.Any())
                        {
                            <div class="alert alert-info text-center mb-0 mt-3 empty-message ">لا توجد مشاريع متأخرة أو معرضة للخطر.</div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table id="overdueProjectsTable" class="table table-hover table-striped" style="min-width:900px">
                                    <thead>
                                        <tr>
                                            <th class="text-center">اسم المشروع</th>
                                            <th class="text-center">تاريخ الانتهاء</th>
                                            <th class="text-center">الحالة</th>
                                            <th class="text-center" style="text-align: center !important;">عدد المهام غير المكتملة</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var p in Model.OverdueProjectsWithIncompleteTasks)
                                        {
                                            <tr class="project-row" data-project-id="@p.ProjectId" style="cursor:pointer;">
                                                <td class="text-center">@p.Name</td>
                                                <td class="text-center" data-order="@p.EndDate.ToString("yyyy-MM-dd")">@p.EndDate.ToShortDateString()</td>
                                                <td class="text-center">
                                                    @if (p.EndDate.Date < DateTime.Today)
                                                    {
                                                        <span class="badge bg-danger">متأخر</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-warning text-dark">مُعرض للتأخير</span>
                                                    }
                                                </td>
                                                <td class="text-center">@p.IncompleteTasksCount</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@section Jobick_style{
    <link href="~/Jobick/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Jobick/vendor/datatables/responsive/responsive.css" rel="stylesheet" />
    <link href="~/css/datatables-rtl.css" rel="stylesheet" />
    <link href="~/css/dashboard-modern.css" rel="stylesheet" />
    <!-- Added: bootstrap-select CSS for modern dropdown -->
    <link href="~/Jobick/vendor/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet" />
    <style>
        /* Force "in progress" KPI to #e16b16 */
        .kpi-inprogress {
            background-color: #e16b16 !important;
            color: #fff !important;
        }
        .kpi-inprogress .kpi-icon,
        .kpi-inprogress .kpi-label,
        .kpi-inprogress .kpi-value,
        .kpi-inprogress .kpi-sub {
            color: #fff !important;
        }

        /* Force "not started" KPI to #b5b5b5 */
        .kpi-notstarted {
            background-color: #b5b5b5 !important;
            color: #212529 !important;
        }
        .kpi-notstarted .kpi-icon,
        .kpi-notstarted .kpi-label,
        .kpi-notstarted .kpi-value,
        .kpi-notstarted .kpi-sub {
            color: #212529 !important;
        }

        /* Center DataTables "لا توجد نتائج مطابقة" message */
        #overdueProjectsTable tbody td.dataTables_empty,
        table.dataTable tbody td.dataTables_empty {
            text-align: center !important;
        }

        /* Utility: center inline empty state messages */
        .empty-message {
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            min-height: 42px;
        }

        /* Modern dropdown polish */
        .modern-select .bootstrap-select > .dropdown-toggle {
            background-color: #fff;
            border-color: var(--border, #e5e5e5);
            color: #495057;
            padding: .45rem 1rem;
        }
        .modern-select .bootstrap-select .dropdown-menu {
            border-radius: .75rem;
        }
        .modern-select .bootstrap-select .bs-searchbox input.form-control {
            border-radius: .5rem;
        }
    </style>
}

@section Jobick_script{
    <script src="~/Jobick/vendor/global/global.min.js"></script>
    <script src="~/Jobick/js/custom.min.js"></script>
    <script src="~/Jobick/js/dlabnav-init.js"></script>
    <script src="~/Jobick/vendor/peity/jquery.peity.min.js"></script>
    <script src="~/Jobick/vendor/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/Jobick/vendor/bootstrap-datepicker-master/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Jobick/vendor/apexchart/apexchart.js"></script>
    <script src="~/Jobick/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Jobick/vendor/datatables/responsive/responsive.js"></script>
    <script src="~/Jobick/vendor/owl-carousel/owl.carousel.js"></script>
    <script>
        // Initialize Bootstrap tooltips (for total budget hover)
        document.addEventListener('DOMContentLoaded', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function (el) { new bootstrap.Tooltip(el); });
        });
    </script>
    <script>
        (function(){
            // Added: initialize responsible filter and navigate on change
            const $picker = $('.selectpicker');
            if($picker.length){
                $picker.selectpicker({
                    liveSearch: true,
                    noneSelectedText: 'اختر القطاع المسؤول',
                    liveSearchPlaceholder: 'ابحث...'
                });
                document.getElementById('responsibleFilter')?.addEventListener('change', function(){
                    const v = this.value;
                    const url = new URL(window.location.href);
                    url.searchParams.set('responsible', v);
                    window.location.href = url.toString();
                });
            }

            const years  = @Html.Raw(yearsJson);
            const counts = @Html.Raw(countsJson);

            // CountUp effect for KPIs (kept for numeric KPIs only)
            document.querySelectorAll('[data-countup]').forEach(el=>{
                const decimals = parseInt(el.getAttribute('data-decimals')||'0');
                const target = parseFloat((el.textContent||'0').replace(/,/g,'')) || 0;
                let start = 0, startTime = null, dur = 900;
                const fmt = (v)=> decimals? v.toFixed(decimals) : Math.round(v).toString();
                function step(ts){
                    if(startTime===null) startTime = ts;
                    const p = Math.min(1,(ts-startTime)/dur);
                    el.textContent = fmt(start + (target-start)*p);
                    if(p<1) requestAnimationFrame(step);
                }
                requestAnimationFrame(step);
            });

            // Status Pie (3rd slice "لم تبدأ" = #b5b5b5)
            const statusEl = document.querySelector("#projectsStatusPie");
            const done = @Model.DoneProjects;
            const inProgress = @Model.InProgressProjects;
            const notStarted = @Model.NotStartedProjects;
            if(statusEl){
                new ApexCharts(statusEl,{
                    chart:{ type:'donut', height:360, fontFamily:'inherit' },
                    series:[done, inProgress, notStarted],
                    labels:['مكتملة','جاري التنفيذ','لم تبدأ'],
                    colors:['#198754','#e16b16','#b5b5b5'],
                    legend:{ position:'bottom' },
                    dataLabels:{ enabled:true, formatter:(val,opts)=> opts.w.globals.series[opts.seriesIndex] },
                    tooltip:{ y:{ formatter:v=> v + ' مشروع'} },
                    plotOptions:{ pie:{ donut:{ size:'68%' } } }
                }).render();
            }

            // Projects Count By Year
            const barEl = document.querySelector("#projectsByYearBar");
            if(barEl){
                const realYears = years.length ? years : ['لا بيانات'];
                const realCounts = years.length ? counts : [0];
                new ApexCharts(barEl,{
                    chart:{ type:'bar', height:360, toolbar:{ show:false }, fontFamily:'inherit' },
                    series:[{ name:'عدد المشاريع', data: realCounts }],
                    xaxis:{ categories: realYears, axisBorder:{ show:false }, axisTicks:{ show:false }, labels:{ style:{ colors:'#6c757d', fontSize:'13px' } } },
                    yaxis:{ labels:{ style:{ colors:'#6c757d', fontSize:'12px' } } },
                    plotOptions:{ bar:{ columnWidth:'45%', borderRadius:6 } },
                    dataLabels:{ enabled:true, formatter:(val)=> val, style:{ fontSize:'12px', fontWeight:'600' } },
                    stroke:{ show:true, width:2, colors:['transparent'] },
                    colors:['#0d6efd'],
                    grid:{ strokeDashArray:6, borderColor:'var(--border, #e5e5e5)' },
                    tooltip:{ y:{ formatter:v=> v + ' مشروع'} }
                } ).render();
            }

            // Budgets per Year Bar
            const budgetYearEl = document.querySelector("#projectsBudgetByYearBar");
            if(budgetYearEl){
                const budgetYears = @Html.Raw(budgetYearsJson);
                const budgetYearValues = @Html.Raw(budgetYearValuesJson);
                const realBudgetYears = budgetYears.length ? budgetYears : ['لا بيانات'];
                const realBudgetValues = budgetYears.length ? budgetYearValues : [0];
                new ApexCharts(budgetYearEl,{
                    chart:{ type:'bar', height:360, toolbar:{ show:false }, fontFamily:'inherit' },
                    series:[{ name:'الميزانية', data: realBudgetValues }],
                    xaxis:{ categories: realBudgetYears, axisBorder:{ show:false }, axisTicks:{ show:false }, labels:{ style:{ colors:'#6c757d', fontSize:'13px' } } },
                    yaxis:{ labels:{ style:{ colors:'#6c757d', fontSize:'12px' }, formatter:(v)=> Intl.NumberFormat('ar-EG',{notation:'compact',maximumFractionDigits:1}).format(v) } },
                    plotOptions:{ bar:{ columnWidth:'45%', borderRadius:6 } },
                    dataLabels:{ enabled:true, formatter:(val)=> Intl.NumberFormat('ar-EG',{notation:'compact',maximumFractionDigits:1}).format(val), style:{ fontSize:'12px', fontWeight:'600' } },
                    stroke:{ show:true, width:2, colors:['transparent'] },
                    colors:['#0d6efd'],
                    grid:{ strokeDashArray:6, borderColor:'var(--border, #e5e5e5)' },
                    tooltip:{ y:{ formatter:v=> Intl.NumberFormat('ar-EG',{minimumFractionDigits:2,maximumFractionDigits:2}).format(v) } }
                }).render();
            }

            // Budgets Donut
            const budgetEl = document.querySelector("#projectsBudgetsDonut");
            if(budgetEl){
                const budgetLabels = @Html.Raw(@budgetLabelsJson);
                const budgetValues = @Html.Raw(@budgetValuesJson);
                if(budgetValues.length){
                    new ApexCharts(budgetEl,{
                        chart:{ type:'donut', height:360, fontFamily:'inherit' },
                        series: budgetValues,
                        labels: budgetLabels,
                        colors:['#4e79a7','#f28e2b','#e15759','#76b7b2','#59a14f','#edc949','#af7aa1','#ff9da7','#9c755f','#bab0ab'],
                        legend:{ position:'right', fontSize:'12px', markers:{ width:10, height:10 }, itemMargin:{ vertical:4 } },
                        dataLabels:{ enabled:true, formatter:(val,opts)=>{ const v=opts.w.globals.series[opts.seriesIndex]; return v?Intl.NumberFormat('ar-EG',{notation:'compact',maximumFractionDigits:1}).format(v):''; } },
                        tooltip:{ y:{ formatter:(v)=> Intl.NumberFormat('ar-EG',{minimumFractionDigits:2, maximumFractionDigits:2}).format(v) } },
                        plotOptions:{ pie:{ donut:{ size:'68%' } } }
                    }).render();
                }
            }

            // Overdue + At-Risk Table
            $('#overdueProjectsTable').DataTable({
                order: [],
                responsive: true,
                columnDefs: [
                    { targets: 2, orderable: false } // status column
                ],
                language: {
                    // Localize search and length menu
                    search: 'بحث:',
                    searchPlaceholder: 'اكتب للبحث...',
                    lengthMenu: 'إظهار _MENU_ مُدخل',
                    // Keep your custom arrows
                    paginate: { previous: '&lt;', next: '&gt;' },
                    // Helpful Arabic strings
                    info: 'إظهار _START_ إلى _END_ من أصل _TOTAL_ مُدخل',
                    infoEmpty: 'لا توجد بيانات لعرضها',
                    zeroRecords: 'لا توجد نتائج مطابقة',
                    infoFiltered: '(مصفاة من إجمالي _MAX_ مُدخل)'
                }
            });
            $(document).on('click','#overdueProjectsTable .project-row',function(){
                const id = $(this).data('project-id');
                if(id) window.location.href = '/Projects/ProjectDetails/' + id;
            });

        })();
    </script>
}