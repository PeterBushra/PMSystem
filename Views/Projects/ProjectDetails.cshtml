@model Jobick.ViewModels.ProjectDetailsVM
@{
    Layout = "~/Views/Shared/_LayoutJobick.cshtml";

    var today = DateTime.Today;

    const decimal PERCENT_TEXT_INSIDE_THRESHOLD = 18m;   // When to show text inside progress bar
    const decimal PERCENT_LIGHT_TEXT_THRESHOLD  = 55m;   // When to switch to light text color over bar (still used by JS config)
    const decimal COMPLETION_SUCCESS_THRESHOLD  = 100m;  // 100% completion
    const decimal PROJECT_WEIGHT_CAP            = 100m;  // Project task weights sum target

    // Basic KPI counts
    var completed      = Model.Tasks.Count(t => t.DoneRatio >= 1.0m);
    var overdue        = Model.Tasks.Count(t => t.ExpectedEndDate < today && t.DoneRatio < 1.0m);
    var inProgress     = Model.Tasks.Count(t => t.DoneRatio > 0 && t.DoneRatio < 1.0m && t.ExpectedEndDate >= today);
    var notStarted     = Model.Tasks.Count(t => (t.DoneRatio == 0 || t.DoneRatio == null) && t.ExpectedEndDate >= today);
    var tasksCount     = Model.Tasks.Count;

    // Costs
    var totalTasksCost = Model.Tasks.Sum(t => t.Cost ?? 0);
    var projectCost    = Model.TotalCost ?? 0;

    // Weights / completion
    var allTasksCompleted = tasksCount > 0 && completed == tasksCount;
    var totalWeightRaw    = Model.Tasks.Sum(t => t.Weight ?? 0m);
    var isWeightsFull     = totalWeightRaw >= PROJECT_WEIGHT_CAP;
    var projectCompletionWeighted = Math.Round(Model.Tasks.Sum(t => (t.Weight ?? 0m) * (t.DoneRatio ?? 0m)), 2);
    projectCompletionWeighted = Math.Clamp(projectCompletionWeighted, 0m, PROJECT_WEIGHT_CAP);

    // Year distribution (for client charts)
    var projectStartYear = Model.StartSate.Year;
    var projectEndYear   = Model.EndDate.Year;
    var hasTasks         = Model.Tasks?.Any() == true;
    var minTaskYear      = hasTasks ? Model.Tasks.Min(t => t.ExpectedEndDate.Year) : projectStartYear;
    var maxTaskYear      = hasTasks ? Model.Tasks.Max(t => t.ExpectedEndDate.Year) : projectEndYear;
    var minYear          = Math.Min(projectStartYear, minTaskYear);
    var maxYear          = Math.Max(projectEndYear,   maxTaskYear);
    var yearsAsc         = Enumerable.Range(minYear, maxYear - minYear + 1).ToList();
    var weightPerYearAsc = yearsAsc.Select(y => Math.Round(Model.Tasks.Where(t => t.ExpectedEndDate.Year == y).Sum(t => t.Weight ?? 0m), 2)).ToList();
    yearsAsc.Reverse(); weightPerYearAsc.Reverse();
    var years            = yearsAsc; // reversed years
    var weightPerYear    = weightPerYearAsc; // reversed weights
    var totalAllYears    = Math.Round(weightPerYear.Sum(), 2);

    // Client config for external JS
    var clientConfig = new {
        years,
        weights = weightPerYear,
        totalAllYears,
        completed,
        inProgress,
        notStarted,
        overdue,
        totalTasksCostPercent = projectCost>0? Math.Round(totalTasksCost*100/projectCost,2):0,
        remainingCostPercent = projectCost>0? 100 - Math.Round(totalTasksCost*100/projectCost,2):0,
        projectCompletionWeighted,
        projectId = Model.Id,
        uploadExcelUrl = Url.Action("UploadExcel","Import"),
        thresholds = new {
            textInside = PERCENT_TEXT_INSIDE_THRESHOLD,
            lightText = PERCENT_LIGHT_TEXT_THRESHOLD,
            completionSuccess = COMPLETION_SUCCESS_THRESHOLD
        }
    };
    var clientConfigJson = System.Text.Json.JsonSerializer.Serialize(clientConfig);

    ViewData["Title"] = allTasksCompleted
        ? new Microsoft.AspNetCore.Html.HtmlString($"تفاصيل المشروع - {Model.Name} <span class=\"badge badge-success ms-2 align-middle\" title=\"اكتمل المشروع بالكامل\">مكتمل</span>")
        : $"تفاصيل المشروع - {Model.Name}";

    // Expose frequently used values to partials through ViewData (optional usage)
    ViewData["AllTasksCompleted"] = allTasksCompleted;
    ViewData["IsWeightsFull"] = isWeightsFull;
    ViewData["CompletedCount"] = completed;
    ViewData["OverdueCount"] = overdue;
    ViewData["InProgressCount"] = inProgress;
    ViewData["NotStartedCount"] = notStarted;
    ViewData["TasksCount"] = tasksCount;
    ViewData["TotalTasksCost"] = totalTasksCost;
    ViewData["ProjectCost"] = projectCost;
    ViewData["ProjectCompletionWeighted"] = projectCompletionWeighted;
    ViewData["PercentTextInsideThreshold"] = PERCENT_TEXT_INSIDE_THRESHOLD;
    ViewData["CompletionSuccessThreshold"] = COMPLETION_SUCCESS_THRESHOLD;
    ViewData["ProjectWeightCap"] = PROJECT_WEIGHT_CAP;
}

<div class="content-body rtl-text-right" dir="rtl">
    <div class="container-fluid">
        @await Html.PartialAsync("_ProjectBreadcrumb")
        @await Html.PartialAsync("_ProjectInfo", Model)
        @await Html.PartialAsync("_ProjectKpis", Model)
        @await Html.PartialAsync("_ProjectTaskCharts", Model)
        @await Html.PartialAsync("_ProjectStageCompletion", Model)
        @await Html.PartialAsync("_ProjectTasksTable", Model)
    </div>
</div>

<!-- Root config for external JS -->
<div id="project-details-root" data-config='@Html.Raw(clientConfigJson)'></div>

@await Html.PartialAsync("_ImportPreviewModal")

@section Jobick_style {
    <link href="~/Jobick/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Jobick/vendor/datatables/responsive/responsive.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/datatables-rtl.css" />
    <link rel="stylesheet" href="~/Jobick/vendor/chartist/css/chartist.min.css" />
    <link href="~/Jobick/vendor/bootstrap-datepicker-master/css/bootstrap-datepicker.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/project-details.css" />
}

@section Jobick_script {
    <script src="~/Jobick/vendor/global/global.min.js"></script>
    <script src="~/Jobick/js/custom.min.js"></script>
    <script src="~/Jobick/js/dlabnav-init.js"></script>
    <script src="~/Jobick/vendor/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/Jobick/vendor/bootstrap-datepicker-master/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Jobick/vendor/apexchart/apexchart.js"></script>
    <script src="~/Jobick/vendor/chartjs/chart.bundle.min.js"></script>
    <script src="~/Jobick/vendor/chartist/js/chartist.min.js"></script>
    <script src="~/Jobick/vendor/chartist-plugin-tooltips/js/chartist-plugin-tooltip.min.js"></script>
    <script src="~/Jobick/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/Jobick/vendor/datatables/responsive/responsive.js"></script>
    <script src="~/Jobick/vendor/peity/jquery.peity.min.js"></script>
    <script src="~/js/project-details.js"></script>
}